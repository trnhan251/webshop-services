server:
  port: 9081

spring:
  application.name: catalog
  main:
    web-application-type: reactive
    cloud-platform: kubernetes
  profiles.active: dev

  datasource:
    url: jdbc:postgresql://localhost:5432/postgres?useSSL=false
    username: postgres
    password: postgres
  jpa:
    properties.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate.ddl-auto: update
    generate-ddl: true
    show-sql: false

management:
  server.port: 10000
  endpoint:
    metrics:
      enabled: true
    prometheus.enabled: true
    health.show-details: always
  metrics.export.prometheus.enabled: true
  endpoints.web.exposure.include: "*"
  health:
    circuitbreakers.enabled: true
    ratelimiters.enabled: true
    diskspace.enabled: false
  security.enabled: false

logging.level.root: DEBUG

resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        minimumNumberOfCalls: 10
        waitDurationInOpenState: 20s
        failureRateThreshold: 50
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowType: TIME_BASED
        slidingWindowSize: 100
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
    instances:
      catalog:
        baseConfig: default

  retry:
    configs:
      default:
        maxRetryAttempts: 3
        waitDuration: 1500
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2.2
        retryExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
    instances:
      catalog:
        baseConfig: default

  thread-pool-bulkhead:
    configs:
      default:
        maxThreadPoolSize: 4
        coreThreadPoolSize: 1
        queueCapacity: 10
        keepAliveDuration: 200
    instances:
      catalog:
        baseConfig: default

  ratelimiter:
    configs:
      default:
        registerHealthIndicator: true
        limitForPeriod: 10
        limitRefreshPeriod: 1s
        timeoutDuration: 0
    instances:
      catalog:
        baseConfig: default

  timelimiter:
    configs:
      default:
        timeoutDuration: 5s
        cancelRunningFuture: true
    instances:
      catalog:
        baseConfig: default
